const e=Object.defineProperties({},{text:{value:"#text"},comment:{value:"#comment"},fragment:{value:"#document-fragment"}});function t(e,r=!1){return{type:e.type,properties:Object.assign({},e.properties),children:r?e.children.map(e=>t(e)):[]}}function r(t=""){return{type:e.text,properties:{textContent:t},children:[]}}function n(t=""){return{type:e.comment,properties:{textContent:t},children:[]}}function s(...t){return{type:e.fragment,properties:{},children:t}}function i(e,t,n){let s;return("object"!=typeof t||Array.isArray(t))&&(n=t,t={}),s="string"==typeof n?[r(n)]:Array.isArray(n)?n.map(e=>"string"==typeof e?r(e):e):[],{type:e,properties:t,children:s}}const o={binding:null};function p(e,t,r){e instanceof RegExp?o.binding=e:(r||(r=t||e),t||(t=":"),o.binding=new RegExp(`${e}\\s*([^\\s${t}${r}]+)(?:\\s*${t}\\s*((?:[^\\s${r}]|\\s+[^${r}])*))?\\s*${r}`,"g"))}p("{",":","}");class d extends class{constructor(){this._map=new Map}addEventListener(e,t,r={}){let n=this._map.get(e);n||(n=[],this._map.set(e,n));let s=!0;for(const e of n)if(e.listener===t){e.options=r,s=!1;break}return s&&n.push({listener:t,options:r}),s}removeEventListener(e,t){const r=this._map.get(e);if(r){let e=0;for(const n of r){if(n.listener===t)return r.splice(e,1),!0;e++}}return!1}async dispatchEvent(e,t={}){const r=[],n=this._map.get(e);if(n)for(const{listener:s,options:i}of[...n]){const n=s({type:e,target:this,data:{...i.data||{},...t}});r.push(n),i.once&&this.removeEventListener(e,s),i.wait&&await n}await Promise.all(r)}}{constructor(e){super(),this._parent=null,this._children=[],this._state={},this.acceptParentState=!1,e instanceof d?(this.virdNode=e.virdNode,e.addEventListener("update",()=>{this.update()})):this.virdNode=t(e),this.setChildren(e.children.map(e=>e instanceof d?e:new d(e))),this.addEventListener("mount",e=>{for(const t of this.children)t.dispatchEvent("unmount",{parent:e.data.parent})}),this.addEventListener("unmount",e=>{for(const t of this.children)t.dispatchEvent("unmount",{parent:e.data.parent})})}insertAfter(e,...t){const r=this.children;let n;if(e){if(n=r.indexOf(e)+1,n<1)throw Error("The VirdElement before which the new VirdElement is to be inserted is not a child of this VirdElement.")}else n=r.length;return r.splice(n,0,...t),this.setChildren(r),this.dispatchEvent("insert-children",{children:t,index:n}),this}insertBefore(e,...t){return this.insertAfter(e?e.prev:this.firstChild,...t)}appendChild(...e){return this.insertAfter(null,...e)}removeChild(...e){const t=this.children;for(const r of e)if(!t.includes(r))throw Error("The VirdElement to be removed is not a child of this VirdElement.");return this.setChildren(t.filter(t=>!e.includes(t))),this.dispatchEvent("remove-children",{children:e}),this}remove(){const e=this.parent;return e&&e.removeChild(this),this}clearChildren(){return this.setChildren([]),this}setChildren(e){const t=this.children;this._children=e,this.virdNode.children=this.children.map(e=>e.virdNode);for(const r of t)e.includes(r)||(r._parent=null,this.dispatchEvent("unmount",{parent:this}));for(const r of e)t.includes(r)||(r._parent=this,this.dispatchEvent("mount",{parent:this}));return this.update(),t}clone(e=!1){const r=t(this.virdNode,e),n=new d(r);return n.setState(this.state,!1),n}getVirdElements(e,t=!1){const r=[];t&&e(this)&&r.push(this);for(const t of this.children){e(t)&&r.push(t);const n=t.getVirdElements(e);n.length>0&&r.push(...n)}return r}update(){this.dispatchEvent("update")}setProperties(e,t=!0){const r=this.virdNode.properties;for(const t of Object.keys(e))if(this.state[t]!==r[t]){this.virdNode.properties=Object.assign(Object.assign({},this.virdNode.properties),e);break}t&&r!==this.virdNode.properties&&this.update()}setState(e,t=!0){const r=this._state;for(const t of Object.keys(e))if(this.state[t]!==e[t]){this._state=Object.assign(Object.assign({},this.state),e);break}t&&r!==this._state&&this.update()}getParentState(e=!0){const t=[this.state],r=n=>{n&&(t.push(n.state),e&&n.acceptParentState&&r(n.parent))};r(this.parent);let n={};for(const e of t)n=Object.assign(Object.assign({},e),n);return n}setAcceptParentStateOfChildren(e){for(const t of this.children)t.acceptParentState=e,t.setAcceptParentStateOfChildren(e)}get parent(){return this._parent}get children(){return[...this._children]}set children(e){this.setChildren(e)}get firstChild(){return this.children[0]||null}get lastChild(){const e=this.children;return e[e.length-1]||null}get next(){const e=this.parent;if(!e)return null;const t=e.children;return t[t.indexOf(this)+1]||null}get prev(){const e=this.parent;if(!e)return null;const t=e.children;return t[t.indexOf(this)-1]||null}get state(){return this._state}set state(e){this._state=e}get type(){return this.virdNode.type}set type(e){this.virdNode.type=e,this.update()}get properties(){let e={};const t=Object.assign({},this.virdNode.properties);if(o.binding){const r=this.getParentState(),n=(e,t,n="")=>t in r?String(r[t]):n;for(const r of Object.keys(t)){const s=t[r];e[r]=s.replace(o.binding,n)}}else e=t;return e}set properties(e){this.virdNode.properties=e,this.update()}}function a(t,r=!1,n){if("string"==typeof t)return"boolean"==typeof r&&(r={}),i(t,r,n);{const n=t,s=n.nodeName.toLocaleLowerCase(),o={};if(n instanceof Element)for(const{name:e,value:t}of n.attributes)o[e]=t;else n instanceof DocumentFragment||(o.textContent=n.textContent||"");const p=!!r;let d=[...n.childNodes].map(e=>a(e,p));if(p){const t=t=>t.type!==e.comment&&(t.type!==e.text||!/^\s*$/.test(t.properties.textContent));d=d.filter(t)}return i(s,o,d)}}function c(e,t,r){Array.isArray(t)&&(r=t,t={});const n=a(e,t,Array.isArray(r)?r.map(e=>e instanceof d?e.virdNode:e):r);return new d(n)}class h{constructor(){this._renderMap=new Map,this._oldVirdNodeMap=new Map,this._nodeCreatorMap=new WeakMap,this._propertyTypeBinderMap=new Map,this._propertyTypeRegExpBinderMap=new Map,this._customNodeCreatorMap=new Map,this.setCustomNode(e.text,()=>document.createTextNode("")),this.setCustomNode(e.comment,()=>document.createComment("")),this.setCustomNode(e.fragment,()=>document.createDocumentFragment()),this.setPropertyTypeBind("textContent",(e,t)=>{e.textContent=t.newValue||""})}_updateProperties(e,t,r){const n=function(e,t){const r={};if(e!==t)if(e)if(t){const n=Object.keys(e),s=Object.keys(t),i=new Set([...n,...s]);for(const n of i){const s=e[n],i=t[n];s!==i&&(r[n]=[s,i])}}else for(const t of Object.keys(e)){const n=e[t];r[t]=[n,void 0]}else if(t)for(const e of Object.keys(t)){const n=t[e];r[e]=[void 0,n]}return r}(t,r);for(const t of Object.keys(n)){const[r,s]=n[t];let i=!1;for(const[n,o]of this._propertyTypeRegExpBinderMap){const p=t.match(n);if(p){i=!0,o(e,p,{newValue:r,oldValue:s});break}}if(!i){const n=this._propertyTypeBinderMap.get(t);n?n(e,{newValue:r,oldValue:s}):e instanceof Element&&(r?e.setAttribute(t,r):e.removeAttribute(t))}}}render(r,...n){const s=n.map(e=>"function"==typeof e?e(r):e),i=function t(r){const n=[];for(const s of r)if(s.type===e.fragment){const e=t(s.children);n.push(...e)}else n.push(s);return n}(s),o=this.getChildrenVirdNode(r),p=[...r.childNodes];this._renderMap.set(r,s);const a=i.map(e=>t(e instanceof d?e.virdNode:e));this._oldVirdNodeMap.set(r,a);let c=0;const h=Math.max(p.length,i.length);for(;c<h;){const e=o[c]||null,t=i[c]||null,n=p[c]||null;let s=null;t?(t instanceof d&&t.addEventListener("update",()=>{this.reRender(r)}),e&&e.type===t.type?s=n:(s=this.createNode(t),n?r.replaceChild(s,n):r.appendChild(s))):n&&r.removeChild(n),s&&(this._updateProperties(s,t?t.properties:void 0,e?e.properties:void 0),t&&t.children.length>0&&this.render(s,...t.children)),c++}return i}renderDom(e,t=!1){const r=a(e,t).children;return this.render(e,...r)}reRender(e){const t=this._renderMap.get(e);t&&this.render(e,...t)}createDispatcher(e){return async t=>{t&&await t(),this.reRender(e)}}createEffect(e,t){const r=this.createDispatcher(e);return{runEffect(e){r(async()=>{t(e)})}}}createNode(e){let t;const r=t?this._nodeCreatorMap.get(t):void 0,n=this._customNodeCreatorMap.get(e.type);return r!==n&&n&&(t=n(e)),t||(t=document.createElement(e.type)),t}clone(){const e=new h;for(const[t,r]of this._propertyTypeRegExpBinderMap)e.setPropertyTypeRegExpBind(t,r);for(const[t,r]of this._propertyTypeBinderMap)e.setPropertyTypeBind(t,r)}getChildrenVirdNode(e){return this._oldVirdNodeMap.get(e)||[]}setCustomNode(e,t){return this._customNodeCreatorMap.set(e,t),this}removeCustomNode(e){return this._customNodeCreatorMap.delete(e),this}setPropertyTypeRegExpBind(e,t){return this.removePropertyTypeRegExpBind(e),this._propertyTypeRegExpBinderMap.set(e,t),this}removePropertyTypeRegExpBind(e){for(const t of this._propertyTypeRegExpBinderMap.keys())if(String(t)===String(e)){this._propertyTypeRegExpBinderMap.delete(e);break}return this}setPropertyTypeBind(e,t){return this._propertyTypeBinderMap.set(e,t),this}removePropertyTypeBind(e){return this._propertyTypeBinderMap.delete(e),this}}const l=new h;export{h as Renderer,d as VirdElement,t as cloneVirdNode,o as config,c as createElement,a as createNode,n as createVirdComment,s as createVirdFragment,i as createVirdNode,r as createVirdText,l as renderer,p as setBindingConfig,e as virdNodeTypes};
